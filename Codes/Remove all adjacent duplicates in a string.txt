import java.util.Stack;
class Solution {
    public String removeDuplicates(String s) {
        Stack<Character> stack = new Stack<>();
        String result = "";
        
        for(char i: s.toCharArray()){
            if(stack.isEmpty()){  //checking if the stack is empty, because for the first element, if we compare it to the top of the stack, it'll just compare itself with itself and give the wrong answer.
                stack.push(i);
            }
            
            else{
                if(i!=stack.peek()){ //if the top of the stack is not equal to the current character, only then push it into the stack.
                    stack.push(i);
                }
                
                else{
                    stack.pop(); //if the top is equal to the current character, remove the top. 
                }
            }
        }
        
        for(char i: stack){
            result = result + i; //storing the elements of the stack in a string.
        }
        
        return result;
    }
}