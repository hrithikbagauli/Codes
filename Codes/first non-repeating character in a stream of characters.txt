public class Solution {
    public String solve(String A) {
        char arr[] = A.toCharArray();
        Queue<Character> q = new LinkedList<>();
        StringBuilder word = new StringBuilder();
        HashMap<Character, Integer> map = new HashMap<>();
        
        for(char i=97; i<=122; i++){
            map.put(i, 0);
        }
        
        for(int i=0; i<arr.length; i++){
            if(i==0){
                q.add(arr[i]);
                word.append(arr[i]);
                map.replace(arr[i], map.get(arr[i])+1);
            }
            
            else{
                map.replace(arr[i], map.get(arr[i])+1);
                q.add(arr[i]);
                while(!q.isEmpty() && map.get(q.peek())>1){
                    q.remove();
                }
                if(q.isEmpty()){
                    word.append('#');
                }
                else{
                    word.append(q.peek());
                }
            }
        }
        return word.toString();
        
        
    }
}
